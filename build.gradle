import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  ext {
    forgehaxVersion = '2.9.0'

    minecraftVersion = '1.15.2'
    forgeVersion = '1.15.2-31.0.1'

    fmlVersion = '2.0.0-milestone.1'
    lombokVersion = '1.18.10'

    mcpVersion = '1.15.1'
    mcpChannel = 'snapshot'
    mcpMapping = '20200126'
  }
  repositories {
    mavenCentral()
    jcenter()
    maven { url "http://files.minecraftforge.net/maven" }
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
  }
}

repositories {
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/groups/public/" }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'

group 'com.matt.forgehax'
version forgehaxVersion

archivesBaseName = "forgehax-${version}"
sourceCompatibility = targetCompatibility = '1.8'

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceSets {
  api {
    compileClasspath += main.compileClasspath
    //runtimeClasspath += sourceSets.main.runtimeClasspath
  }

  common {
    compileClasspath += main.compileClasspath
    //runtimeClasspath += main.runtimeClasspath
  }

  core {
    compileClasspath += main.compileClasspath + common.output
    //runtimeClasspath += main.runtimeClasspath
  }

  main {
    compileClasspath += api.output + common.output
    //runtimeClasspath += common.output
  }

  allSourceSets {
    compileClasspath += main.runtimeClasspath + core.runtimeClasspath + common.runtimeClasspath
  }
}

minecraft {
  mappings channel: mcpChannel, version: "${mcpMapping}-${mcpVersion}"

  runs {
    client {
      workingDirectory project.file('run')

      // Recommended logging data for a userdev environment
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

      // Recommended logging level for the console
      property 'forge.logging.console.level', 'info'

      setIdeaModule project.getName() + '_' + sourceSets.allSourceSets.name

      mods {
//        ForgeHaxCore {
//          source sourceSets.core
//        }

        ForgeHax {
          sources sourceSets.main, sourceSets.core, sourceSets.common
        }
      }
    }
  }
}

dependencies {
  compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  coreAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  commonAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  minecraft "net.minecraftforge:forge:${forgeVersion}"

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '2.15.0'
}

jar {
  manifest {
    attributes([
        "Specification-Title": "ForgeHax",
        "Specification-Vendor": "nhackindustries",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${forgehaxVersion}",
        "Implementation-Vendor" :"nhackindustries",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }

  from sourceSets.common.output
  from sourceSets.core.output
}

processResources {
  filesMatching('**/config.properties') {
    it.filter ReplaceTokens, tokens: [
      "forgehax.version"      : forgehaxVersion,
      "forgehax.mc.version"   : minecraftVersion,
      "forgehax.forge.version": forgeVersion,
      "forgehax.mcp.version"  : mcpVersion,
      "forgehax.mcp.channel"  : mcpChannel,
      "forgehax.mcp.mapping"  : mcpMapping
    ]
  }
}

task setGameDir() {
  // Check if custom gamedir has been passed, if not use default ones per platform
  if (!project.hasProperty("gameDir")) {
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
      project.ext.gameDir = System.getenv("APPDATA") + "/.minecraft"
    } else if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
      project.ext.gameDir = System.properties["user.home"] + "/Library/Application Support/minecraft"
    } else {
      project.ext.gameDir = System.properties["user.home"] + "/.minecraft"
    }
  }
}

//class CopyJarTask extends DefaultTask {
//  @TaskAction
//  protected void exec() {
//    project.copy {
//      final mc = "${project.ext.gameDir}/mods/${project.minecraft.version}"
//
//      // find previous jar (if it exists)
//      final previousJars = project.fileTree(dir: mc).matching {
//        include "${project.archivesBaseName}*"
//      }.files
//
//      // change file name
//      if (previousJars) {
//        // create .backups folder
//        project.file("${mc}/.backups/").mkdirs()
//
//        for (File previousJar : previousJars) {
//          final n = "${mc}/.backups/${previousJar.getName()}.bk"
//          def f = project.file(n)
//          def i = 1
//          while (f.exists()) {
//            f = project.file("${n}_${i}")
//            i++
//          }
//          previousJar.renameTo(f)
//        }
//      }
//
//      // copy forgehax jar from libs to forge mod folder
//      from project.jar
//      into "${project.ext.gameDir}/mods/${project.minecraft.version}"
//    }
//  }
//}
//
//task copyJar(type: CopyJarTask, dependsOn: [setGameDir])
//
//build.finalizedBy copyJar
