name: CI

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      # since the project is built in a container, and the container only mounts the directories
      # we want to cache, everything else will be discarded when the container is destroyed.
      # so we do not have to worry about Actions caching files we do not want cached
      - name: Cache .gradle/caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Cache .gradle/wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run cibuild script
        id: exec
        run: |
          ./scripts/cibuild
          COMMIT_LOGS="$(git log $(git describe --tags --abbrev=0)..HEAD --oneline)"
          COMMIT_LOGS="${COMMIT_LOGS//'%'/'%25'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\n'/'%0A'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\r'/'%0D'}"
          echo "::set-output name=changelog::${COMMIT_LOGS}"

      - name: Upload the built artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.exec.outputs.jar }}
          path: build/libs/${{ steps.exec.outputs.jar }}
          if-no-files-found: error

      - name: Create release if this is a tagged workflow
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: build/libs/${{ steps.exec.outputs.jar }}
          name: ForgeHax ${{ steps.exec.outputs.version }} for Minecraft ${{ steps.exec.outputs.mcversion }}
          body: ${{ steps.exec.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
